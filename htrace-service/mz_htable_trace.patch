Index: htrace-service/src/main/java/com/teambronto/svc/TracedHTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- htrace-service/src/main/java/com/teambronto/svc/TracedHTable.java	(revision b760f6e37be3ff2cc6bb68822b0360cc17cb3e58)
+++ htrace-service/src/main/java/com/teambronto/svc/TracedHTable.java	(revision )
@@ -1,29 +1,42 @@
 package com.teambronto.svc;
 
-import com.github.kristofa.brave.Brave;
 import com.github.kristofa.brave.LocalTracer;
+import com.github.kristofa.brave.SpanId;
+import com.google.common.base.Joiner;
 import com.google.protobuf.Descriptors;
 import com.google.protobuf.Message;
 import com.google.protobuf.Service;
 import com.google.protobuf.ServiceException;
-import edu.umd.cs.findbugs.annotations.NonNull;
-import org.apache.commons.lang.NullArgumentException;
+
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hbase.HTableDescriptor;
 import org.apache.hadoop.hbase.TableName;
-import org.apache.hadoop.hbase.client.*;
+import org.apache.hadoop.hbase.client.Append;
+import org.apache.hadoop.hbase.client.Delete;
+import org.apache.hadoop.hbase.client.Durability;
+import org.apache.hadoop.hbase.client.Get;
+import org.apache.hadoop.hbase.client.Increment;
+import org.apache.hadoop.hbase.client.Put;
+import org.apache.hadoop.hbase.client.Result;
+import org.apache.hadoop.hbase.client.ResultScanner;
+import org.apache.hadoop.hbase.client.Row;
+import org.apache.hadoop.hbase.client.RowMutations;
+import org.apache.hadoop.hbase.client.Scan;
+import org.apache.hadoop.hbase.client.Table;
 import org.apache.hadoop.hbase.client.coprocessor.Batch;
 import org.apache.hadoop.hbase.filter.CompareFilter;
 import org.apache.hadoop.hbase.ipc.CoprocessorRpcChannel;
-import org.apache.hadoop.hbase.ipc.RpcControllerFactory;
-//import org.apache.htrace.core.SpanId;
-//import org.apache.htrace.core.TraceScope;
-//import org.apache.htrace.core.Tracer;
+import org.apache.htrace.Trace;
+import org.apache.htrace.TraceInfo;
+import org.apache.htrace.TraceScope;
 
+import java.io.Closeable;
 import java.io.IOException;
 import java.util.List;
 import java.util.Map;
-import java.util.concurrent.ExecutorService;
+import java.util.Objects;
+
+import edu.umd.cs.findbugs.annotations.NonNull;
 
 
 /**
@@ -31,22 +44,20 @@
  * performed on the table (get, put, etc.) it is logged to Zipkin.
  */
 public class TracedHTable implements Table {
+
+    // For traced operations, prefixes the table name + ':'
+    private static final Joiner NAME_JOINER = Joiner.on(':');
+
     private Table delegate;
-    /**
-     * Brave
-     */
-    private Brave brave;
+    private LocalTracer localTracer;
+    private String tableName;
 
-    public TracedHTable(@NonNull Table delegate, @NonNull Brave brave) {
-        this.delegate = delegate;
-        this.brave = brave;
-    }
-    
-    private String getMethodName(){
-    	return Thread.currentThread().getStackTrace()[2].getMethodName();
-
+    public TracedHTable(@NonNull Table delegate, @NonNull LocalTracer localTracer) {
+        this.delegate = Objects.requireNonNull(delegate, "delegate is required");
+        this.localTracer = Objects.requireNonNull(localTracer, "localTracer is required");
+        this.tableName = delegate.getName().getNameAsString();
     }
-    
+
     @Override
     public Configuration getConfiguration() {
         brave.localTracer().startNewSpan(getName().getNameAsString(), getMethodName());
@@ -86,10 +97,9 @@
 
     @Override
     public Result get(Get get) throws IOException {
-        brave.localTracer().startNewSpan("HBase Client", getMethodName());
-        Result res = delegate.get(get);
-        brave.localTracer().finishSpan();
-        return res;
+        try (Closeable ignored = maybeTrace("get")) {
+            return delegate.get(get);
+        }
     }
 
     @Override
@@ -317,4 +327,28 @@
                                                             R responsePrototype, Batch.Callback<R> callback) throws Throwable {
             delegate.batchCoprocessorService(methodDescriptor, request, startKey, endKey, responsePrototype, callback);
     }
+
+    /**
+     * Start a new HTrace span if Zipkin is currently sampling a trace on this thread.
+     * @param description a description of the current operation that may be traced
+     * @return a {@code Closeable} for all new spans that need to be closed when the operation completes
+     */
+    private Closeable maybeTrace(String description) {
+        // First, try to open a new Zipkin span so we can propagate trace and span info to HTrace
+        SpanId spanId = localTracer.startNewSpan("hbase", NAME_JOINER.join(tableName, description));
+
+        // Only start an HTrace span if Zipkin is actually sampling a trace on this thread
+        if (spanId != null && spanId.sampled()) {
+            // Propagate trace info to new HTrace scope
+            TraceScope traceScope = Trace.startSpan(description, new TraceInfo(spanId.traceId, spanId.spanId));
+
+            // Close both the inner HTrace and outer Zipkin spans (in order) when the operation completes
+            return () -> {
+                traceScope.close();
+                localTracer.finishSpan();
+            };
+        } else {
+            return localTracer::finishSpan; // just in case Zipkin decides to care about closing non-sampled spans
+        }
+    }
 }
Index: htrace-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- htrace-service/pom.xml	(revision b760f6e37be3ff2cc6bb68822b0360cc17cb3e58)
+++ htrace-service/pom.xml	(revision )
@@ -11,6 +11,12 @@
 
     <artifactId>htrace-service</artifactId>
 
+    <properties>
+        <!-- Versions currently used by Bronto -->
+        <hbase.version>1.2.0-cdh5.7.0</hbase.version>
+        <htrace.version>3.2.0-incubating</htrace.version>
+    </properties>
+
     <build>
         <plugins>
             <plugin>
@@ -40,34 +46,30 @@
         </plugins>
     </build>
     <dependencies>
-        <!--<dependency>-->
-            <!--<groupId>org.apache.htrace</groupId>-->
-            <!--<artifactId>htrace-zipkin</artifactId>-->
-            <!--<version>4.2.0-incubating</version>-->
-        <!--</dependency>-->
-
-        <!--&lt;!&ndash; https://mvnrepository.com/artifact/org.apache.htrace/htrace-core &ndash;&gt;-->
-        <!--<dependency>-->
-            <!--<groupId>org.apache.htrace</groupId>-->
-            <!--<artifactId>htrace-core4</artifactId>-->
-            <!--<version>4.2.0-incubating</version>-->
-            <!--<exclusions>-->
-                <!--<exclusion>-->
-                    <!--<groupId>org.slf4j</groupId>-->
-                    <!--<artifactId>slf4j-log4j12</artifactId>-->
-                <!--</exclusion>-->
-            <!--</exclusions>-->
-        <!--</dependency>-->
-
         <dependency>
-            <groupId>org.apache.hbase</groupId>
-            <artifactId>hbase-client</artifactId>
-            <version>1.3.0</version>
+            <groupId>org.apache.htrace</groupId>
+            <artifactId>htrace-zipkin</artifactId>
+            <version>${htrace.version}</version>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.apache.htrace/htrace-core -->
+        <dependency>
+            <groupId>org.apache.htrace</groupId>
+            <artifactId>htrace-core</artifactId>
+            <version>${htrace.version}</version>
             <exclusions>
                 <exclusion>
                     <groupId>org.slf4j</groupId>
-                    <artifactId>slf4j-api</artifactId>
+                    <artifactId>slf4j-log4j12</artifactId>
                 </exclusion>
+            </exclusions>
+        </dependency>
+
+        <dependency>
+            <groupId>org.apache.hbase</groupId>
+            <artifactId>hbase-client</artifactId>
+            <version>${hbase.version}</version>
+            <exclusions>
                 <exclusion>
                     <groupId>org.slf4j</groupId>
                     <artifactId>slf4j-log4j12</artifactId>
